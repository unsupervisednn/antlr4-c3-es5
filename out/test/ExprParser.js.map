{"version":3,"file":"ExprParser.js","sourceRoot":"","sources":["../../test/ExprParser.ts"],"names":[],"mappings":"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","sourcesContent":["// Generated from test/Expr.g4 by ANTLR 4.7.3-SNAPSHOT\n\n\nimport { ATN } from \"antlr4ts/atn/ATN\";\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\nimport { FailedPredicateException } from \"antlr4ts/FailedPredicateException\";\nimport { NotNull } from \"antlr4ts/Decorators\";\nimport { NoViableAltException } from \"antlr4ts/NoViableAltException\";\nimport { Override } from \"antlr4ts/Decorators\";\nimport { Parser } from \"antlr4ts/Parser\";\nimport { ParserRuleContext } from \"antlr4ts/ParserRuleContext\";\nimport { ParserATNSimulator } from \"antlr4ts/atn/ParserATNSimulator\";\nimport { ParseTreeListener } from \"antlr4ts/tree/ParseTreeListener\";\nimport { ParseTreeVisitor } from \"antlr4ts/tree/ParseTreeVisitor\";\nimport { RecognitionException } from \"antlr4ts/RecognitionException\";\nimport { RuleContext } from \"antlr4ts/RuleContext\";\n//import { RuleVersion } from \"antlr4ts/RuleVersion\";\nimport { TerminalNode } from \"antlr4ts/tree/TerminalNode\";\nimport { Token } from \"antlr4ts/Token\";\nimport { TokenStream } from \"antlr4ts/TokenStream\";\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\n\nimport * as Utils from \"antlr4ts/misc/Utils\";\n\n\nexport class ExprParser extends Parser {\n\tpublic static readonly VAR = 1;\n\tpublic static readonly LET = 2;\n\tpublic static readonly PLUS = 3;\n\tpublic static readonly MINUS = 4;\n\tpublic static readonly MULTIPLY = 5;\n\tpublic static readonly DIVIDE = 6;\n\tpublic static readonly EQUAL = 7;\n\tpublic static readonly OPEN_PAR = 8;\n\tpublic static readonly CLOSE_PAR = 9;\n\tpublic static readonly ID = 10;\n\tpublic static readonly WS = 11;\n\tpublic static readonly RULE_expression = 0;\n\tpublic static readonly RULE_assignment = 1;\n\tpublic static readonly RULE_simpleExpression = 2;\n\tpublic static readonly RULE_variableRef = 3;\n\tpublic static readonly RULE_functionRef = 4;\n\t// tslint:disable:no-trailing-whitespace\n\tpublic static readonly ruleNames: string[] = [\n\t\t\"expression\", \"assignment\", \"simpleExpression\", \"variableRef\", \"functionRef\",\n\t];\n\n\tprivate static readonly _LITERAL_NAMES: Array<string | undefined> = [\n\t\tundefined, undefined, undefined, \"'+'\", \"'-'\", \"'*'\", \"'/'\", \"'='\", \"'('\", \n\t\t\"')'\",\n\t];\n\tprivate static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\n\t\tundefined, \"VAR\", \"LET\", \"PLUS\", \"MINUS\", \"MULTIPLY\", \"DIVIDE\", \"EQUAL\", \n\t\t\"OPEN_PAR\", \"CLOSE_PAR\", \"ID\", \"WS\",\n\t];\n\tpublic static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ExprParser._LITERAL_NAMES, ExprParser._SYMBOLIC_NAMES, []);\n\n\t// @Override\n\t// @NotNull\n\tpublic get vocabulary(): Vocabulary {\n\t\treturn ExprParser.VOCABULARY;\n\t}\n\t// tslint:enable:no-trailing-whitespace\n\n\t// @Override\n\tpublic get grammarFileName(): string { return \"Expr.g4\"; }\n\n\t// @Override\n\tpublic get ruleNames(): string[] { return ExprParser.ruleNames; }\n\n\t// @Override\n\tpublic get serializedATN(): string { return ExprParser._serializedATN; }\n\n\tconstructor(input: TokenStream) {\n\t\tsuper(input);\n\t\tthis._interp = new ParserATNSimulator(ExprParser._ATN, this);\n\t}\n\t// @RuleVersion(0)\n\tpublic expression(): ExpressionContext {\n\t\tlet _localctx: ExpressionContext = new ExpressionContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 0, ExprParser.RULE_expression);\n\t\ttry {\n\t\t\tthis.state = 12;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch (this._input.LA(1)) {\n\t\t\tcase ExprParser.VAR:\n\t\t\tcase ExprParser.LET:\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tthis.state = 10;\n\t\t\t\tthis.assignment();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ExprParser.ID:\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tthis.state = 11;\n\t\t\t\tthis.simpleExpression(0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new NoViableAltException(this);\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic assignment(): AssignmentContext {\n\t\tlet _localctx: AssignmentContext = new AssignmentContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 2, ExprParser.RULE_assignment);\n\t\tlet _la: number;\n\t\ttry {\n\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tthis.state = 14;\n\t\t\t_la = this._input.LA(1);\n\t\t\tif (!(_la === ExprParser.VAR || _la === ExprParser.LET)) {\n\t\t\tthis._errHandler.recoverInline(this);\n\t\t\t} else {\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\tthis.matchedEOF = true;\n\t\t\t\t}\n\n\t\t\t\tthis._errHandler.reportMatch(this);\n\t\t\t\tthis.consume();\n\t\t\t}\n\t\t\tthis.state = 15;\n\t\t\tthis.match(ExprParser.ID);\n\t\t\tthis.state = 16;\n\t\t\tthis.match(ExprParser.EQUAL);\n\t\t\tthis.state = 17;\n\t\t\tthis.simpleExpression(0);\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\n\tpublic simpleExpression(): SimpleExpressionContext;\n\tpublic simpleExpression(_p: number): SimpleExpressionContext;\n\t// @RuleVersion(0)\n\tpublic simpleExpression(_p?: number): SimpleExpressionContext {\n\t\tif (_p === undefined) {\n\t\t\t_p = 0;\n\t\t}\n\n\t\tlet _parentctx: ParserRuleContext = this._ctx;\n\t\tlet _parentState: number = this.state;\n\t\tlet _localctx: SimpleExpressionContext = new SimpleExpressionContext(this._ctx, _parentState);\n\t\tlet _prevctx: SimpleExpressionContext = _localctx;\n\t\tlet _startState: number = 4;\n\t\tthis.enterRecursionRule(_localctx, 4, ExprParser.RULE_simpleExpression, _p);\n\t\tlet _la: number;\n\t\ttry {\n\t\t\tlet _alt: number;\n\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tthis.state = 22;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 1, this._ctx) ) {\n\t\t\tcase 1:\n\t\t\t\t{\n\t\t\t\tthis.state = 20;\n\t\t\t\tthis.variableRef();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t{\n\t\t\t\tthis.state = 21;\n\t\t\t\tthis.functionRef();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._ctx._stop = this._input.tryLT(-1);\n\t\t\tthis.state = 32;\n\t\t\tthis._errHandler.sync(this);\n\t\t\t_alt = this.interpreter.adaptivePredict(this._input, 3, this._ctx);\n\t\t\twhile (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {\n\t\t\t\tif (_alt === 1) {\n\t\t\t\t\tif (this._parseListeners != null) {\n\t\t\t\t\t\tthis.triggerExitRuleEvent();\n\t\t\t\t\t}\n\t\t\t\t\t_prevctx = _localctx;\n\t\t\t\t\t{\n\t\t\t\t\tthis.state = 30;\n\t\t\t\t\tthis._errHandler.sync(this);\n\t\t\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 2, this._ctx) ) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t_localctx = new SimpleExpressionContext(_parentctx, _parentState);\n\t\t\t\t\t\tthis.pushNewRecursionContext(_localctx, _startState, ExprParser.RULE_simpleExpression);\n\t\t\t\t\t\tthis.state = 24;\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 4))) {\n\t\t\t\t\t\t\tthrow new FailedPredicateException(this, \"this.precpred(this._ctx, 4)\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.state = 25;\n\t\t\t\t\t\t_la = this._input.LA(1);\n\t\t\t\t\t\tif (!(_la === ExprParser.PLUS || _la === ExprParser.MINUS)) {\n\t\t\t\t\t\tthis._errHandler.recoverInline(this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\t\t\t\tthis.matchedEOF = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\n\t\t\t\t\t\t\tthis.consume();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.state = 26;\n\t\t\t\t\t\tthis.simpleExpression(5);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t_localctx = new SimpleExpressionContext(_parentctx, _parentState);\n\t\t\t\t\t\tthis.pushNewRecursionContext(_localctx, _startState, ExprParser.RULE_simpleExpression);\n\t\t\t\t\t\tthis.state = 27;\n\t\t\t\t\t\tif (!(this.precpred(this._ctx, 3))) {\n\t\t\t\t\t\t\tthrow new FailedPredicateException(this, \"this.precpred(this._ctx, 3)\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.state = 28;\n\t\t\t\t\t\t_la = this._input.LA(1);\n\t\t\t\t\t\tif (!(_la === ExprParser.MULTIPLY || _la === ExprParser.DIVIDE)) {\n\t\t\t\t\t\tthis._errHandler.recoverInline(this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\t\t\t\tthis.matchedEOF = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._errHandler.reportMatch(this);\n\t\t\t\t\t\t\tthis.consume();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.state = 29;\n\t\t\t\t\t\tthis.simpleExpression(4);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.state = 34;\n\t\t\t\tthis._errHandler.sync(this);\n\t\t\t\t_alt = this.interpreter.adaptivePredict(this._input, 3, this._ctx);\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.unrollRecursionContexts(_parentctx);\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic variableRef(): VariableRefContext {\n\t\tlet _localctx: VariableRefContext = new VariableRefContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 6, ExprParser.RULE_variableRef);\n\t\ttry {\n\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tthis.state = 35;\n\t\t\tthis.match(ExprParser.ID);\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic functionRef(): FunctionRefContext {\n\t\tlet _localctx: FunctionRefContext = new FunctionRefContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 8, ExprParser.RULE_functionRef);\n\t\ttry {\n\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tthis.state = 37;\n\t\t\tthis.match(ExprParser.ID);\n\t\t\tthis.state = 38;\n\t\t\tthis.match(ExprParser.OPEN_PAR);\n\t\t\tthis.state = 39;\n\t\t\tthis.match(ExprParser.CLOSE_PAR);\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\n\tpublic sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {\n\t\tswitch (ruleIndex) {\n\t\tcase 2:\n\t\t\treturn this.simpleExpression_sempred(_localctx as SimpleExpressionContext, predIndex);\n\t\t}\n\t\treturn true;\n\t}\n\tprivate simpleExpression_sempred(_localctx: SimpleExpressionContext, predIndex: number): boolean {\n\t\tswitch (predIndex) {\n\t\tcase 0:\n\t\t\treturn this.precpred(this._ctx, 4);\n\n\t\tcase 1:\n\t\t\treturn this.precpred(this._ctx, 3);\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static readonly _serializedATN: string =\n\t\t\"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x03\\r,\\x04\\x02\\t\" +\n\t\t\"\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x03\\x02\\x03\" +\n\t\t\"\\x02\\x05\\x02\\x0F\\n\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x04\" +\n\t\t\"\\x03\\x04\\x03\\x04\\x05\\x04\\x19\\n\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\" +\n\t\t\"\\x04\\x03\\x04\\x07\\x04!\\n\\x04\\f\\x04\\x0E\\x04$\\v\\x04\\x03\\x05\\x03\\x05\\x03\\x06\" +\n\t\t\"\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x06\\x02\\x02\\x03\\x06\\x07\\x02\\x02\\x04\\x02\\x06\" +\n\t\t\"\\x02\\b\\x02\\n\\x02\\x02\\x05\\x03\\x02\\x03\\x04\\x03\\x02\\x05\\x06\\x03\\x02\\x07\\b\" +\n\t\t\"\\x02*\\x02\\x0E\\x03\\x02\\x02\\x02\\x04\\x10\\x03\\x02\\x02\\x02\\x06\\x18\\x03\\x02\" +\n\t\t\"\\x02\\x02\\b%\\x03\\x02\\x02\\x02\\n\\'\\x03\\x02\\x02\\x02\\f\\x0F\\x05\\x04\\x03\\x02\" +\n\t\t\"\\r\\x0F\\x05\\x06\\x04\\x02\\x0E\\f\\x03\\x02\\x02\\x02\\x0E\\r\\x03\\x02\\x02\\x02\\x0F\" +\n\t\t\"\\x03\\x03\\x02\\x02\\x02\\x10\\x11\\t\\x02\\x02\\x02\\x11\\x12\\x07\\f\\x02\\x02\\x12\\x13\" +\n\t\t\"\\x07\\t\\x02\\x02\\x13\\x14\\x05\\x06\\x04\\x02\\x14\\x05\\x03\\x02\\x02\\x02\\x15\\x16\" +\n\t\t\"\\b\\x04\\x01\\x02\\x16\\x19\\x05\\b\\x05\\x02\\x17\\x19\\x05\\n\\x06\\x02\\x18\\x15\\x03\" +\n\t\t\"\\x02\\x02\\x02\\x18\\x17\\x03\\x02\\x02\\x02\\x19\\\"\\x03\\x02\\x02\\x02\\x1A\\x1B\\f\\x06\" +\n\t\t\"\\x02\\x02\\x1B\\x1C\\t\\x03\\x02\\x02\\x1C!\\x05\\x06\\x04\\x07\\x1D\\x1E\\f\\x05\\x02\" +\n\t\t\"\\x02\\x1E\\x1F\\t\\x04\\x02\\x02\\x1F!\\x05\\x06\\x04\\x06 \\x1A\\x03\\x02\\x02\\x02 \" +\n\t\t\"\\x1D\\x03\\x02\\x02\\x02!$\\x03\\x02\\x02\\x02\\\" \\x03\\x02\\x02\\x02\\\"#\\x03\\x02\\x02\" +\n\t\t\"\\x02#\\x07\\x03\\x02\\x02\\x02$\\\"\\x03\\x02\\x02\\x02%&\\x07\\f\\x02\\x02&\\t\\x03\\x02\" +\n\t\t\"\\x02\\x02\\'(\\x07\\f\\x02\\x02()\\x07\\n\\x02\\x02)*\\x07\\v\\x02\\x02*\\v\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x06\\x0E\\x18 \\\"\";\n\tpublic static __ATN: ATN;\n\tpublic static get _ATN(): ATN {\n\t\tif (!ExprParser.__ATN) {\n\t\t\tExprParser.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ExprParser._serializedATN));\n\t\t}\n\n\t\treturn ExprParser.__ATN;\n\t}\n\n}\n\nexport class ExpressionContext extends ParserRuleContext {\n\tpublic assignment(): AssignmentContext | undefined {\n\t\treturn this.tryGetRuleContext(0, AssignmentContext);\n\t}\n\tpublic simpleExpression(): SimpleExpressionContext | undefined {\n\t\treturn this.tryGetRuleContext(0, SimpleExpressionContext);\n\t}\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return ExprParser.RULE_expression; }\n}\n\n\nexport class AssignmentContext extends ParserRuleContext {\n\tpublic ID(): TerminalNode { return this.getToken(ExprParser.ID, 0); }\n\tpublic EQUAL(): TerminalNode { return this.getToken(ExprParser.EQUAL, 0); }\n\tpublic simpleExpression(): SimpleExpressionContext {\n\t\treturn this.getRuleContext(0, SimpleExpressionContext);\n\t}\n\tpublic VAR(): TerminalNode | undefined { return this.tryGetToken(ExprParser.VAR, 0); }\n\tpublic LET(): TerminalNode | undefined { return this.tryGetToken(ExprParser.LET, 0); }\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return ExprParser.RULE_assignment; }\n}\n\n\nexport class SimpleExpressionContext extends ParserRuleContext {\n\tpublic simpleExpression(): SimpleExpressionContext[];\n\tpublic simpleExpression(i: number): SimpleExpressionContext;\n\tpublic simpleExpression(i?: number): SimpleExpressionContext | SimpleExpressionContext[] {\n\t\tif (i === undefined) {\n\t\t\treturn this.getRuleContexts(SimpleExpressionContext);\n\t\t} else {\n\t\t\treturn this.getRuleContext(i, SimpleExpressionContext);\n\t\t}\n\t}\n\tpublic PLUS(): TerminalNode | undefined { return this.tryGetToken(ExprParser.PLUS, 0); }\n\tpublic MINUS(): TerminalNode | undefined { return this.tryGetToken(ExprParser.MINUS, 0); }\n\tpublic MULTIPLY(): TerminalNode | undefined { return this.tryGetToken(ExprParser.MULTIPLY, 0); }\n\tpublic DIVIDE(): TerminalNode | undefined { return this.tryGetToken(ExprParser.DIVIDE, 0); }\n\tpublic variableRef(): VariableRefContext | undefined {\n\t\treturn this.tryGetRuleContext(0, VariableRefContext);\n\t}\n\tpublic functionRef(): FunctionRefContext | undefined {\n\t\treturn this.tryGetRuleContext(0, FunctionRefContext);\n\t}\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return ExprParser.RULE_simpleExpression; }\n}\n\n\nexport class VariableRefContext extends ParserRuleContext {\n\tpublic ID(): TerminalNode { return this.getToken(ExprParser.ID, 0); }\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return ExprParser.RULE_variableRef; }\n}\n\n\nexport class FunctionRefContext extends ParserRuleContext {\n\tpublic ID(): TerminalNode { return this.getToken(ExprParser.ID, 0); }\n\tpublic OPEN_PAR(): TerminalNode { return this.getToken(ExprParser.OPEN_PAR, 0); }\n\tpublic CLOSE_PAR(): TerminalNode { return this.getToken(ExprParser.CLOSE_PAR, 0); }\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return ExprParser.RULE_functionRef; }\n}\n\n\n"]}